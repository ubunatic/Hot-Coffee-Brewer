###
Copyright (c) 2011 Uwe Jugel

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

	Hot Coffee Brewer
	=================
	
	This file is cotest.co a part of the Hot Coffee Brewer
	
	- is compiled via hotcoffee.js
	- is used to test compiled javascript files
	- runs in node.js in Linux and Windows (no dependencies)
	
	https://github.com/ubunatic/Hot-Coffee-Brewer

###

lib2src = (line, js2co=true) ->
	try
		if js2co
			tmpline = line
				.replace("/lib/","/src/")
				.replace(/\.js:/,".co:")
		else
			tmpline = line
			
		tmpline = tmpline
			.replace(/^\s* at\s*/,"")
			.split(":")[0..1].join(":")+":"
			#.replace(rootDir,".") + ":"

		#tmplineLocation = tmpline.match(/\.\/src\/.*\:\d*\:/)[0]
		tmplineLocation = tmpline.match(/\/.*\:\d*\:/)[0]
		tmplineError = tmpline.replace(tmplineLocation,"");
		
		if js2co
			num = tmplineLocation.match(/\.co:\d*\:/)[0].replace(".co:","").replace(":","")
			# num = Math.ceil num * 0.6
			tmplineLocation = tmplineLocation.replace(/\.co:\d*\:/, ".co:#{num}:")
	
		return tmplineLocation+" "+tmplineError
		
	catch error
		return line

test = (file) ->
	try
		jsmodule = require file
	catch error
		errorInfo = error.stack.split("\n")
		errorInfo = (err for err in errorInfo when (
				err.trim() != '' &&
				!err.match(/^node.js:/) &&
				!err.match(/^\s*throw/) &&
				!err.match(/^\s*\^/)
			)
		)[0..3]
	
		errorDetails = (lib2src(err) + "\n" + lib2src(err, false) for err in errorInfo[1..3])

		if error
			process.stdout.write "\n" + errorInfo[0] + "\n" + errorDetails.join("\n") + "\ntest failed\n"
		else
			process.stdout.write "test was successful\n"

module.exports.test = (file) ->
	console.log "running #{ file }"
	test file
		

